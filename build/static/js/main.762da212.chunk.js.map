{"version":3,"sources":["api/api.js","components/read-by-id/ReadById.js","components/create/Create.js","components/delete/Delete.js","components/item-card/ItemCard.js","components/read-all/ReadAll.js","components/update/Update.js","structure/footer/Footer.js","structure/header/Header.js","structure/app/App.js","index.js"],"names":["Api","baseUrl","createUrl","readAllUrl","readSingleUrl","id","updateUrl","deleteUrl","deleteAllUrl","buildApiPostRequest","url","body","fetch","method","headers","Headers","JSON","stringify","buildApiGetRequest","buildApiPutRequest","buildApiDeleteRequest","ReadById","props","match","params","useState","item","setItem","useEffect","getItemData","a","resultado","json","dados","className","href","nome","src","imagemUrl","alt","width","Create","previewImage","setPreviewImage","handleSubmit","event","preventDefault","target","value","jsonResultado","history","push","_id","onSubmit","htmlFor","type","name","onChange","Delete","handleDelete","onClick","ItemCard","ReadAll","listaResultadoApi","atualizarListaResultadoApi","obterResultado","map","index","Update","defaultValue","Footer","Header","height","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.762da212.chunk.js","sourcesContent":["export const Api = {\r\n\tbaseUrl: \"http://localhost:3000/personagens\",\r\n\r\n\tcreateUrl: () => Api.baseUrl + \"/\",\r\n\r\n\treadAllUrl: () => Api.baseUrl + \"/\",\r\n\treadSingleUrl: (id) => Api.baseUrl + \"/\" + id,\r\n\r\n\tupdateUrl: (id) => Api.baseUrl + \"/\" + id,\r\n\r\n\tdeleteUrl: (id) => Api.baseUrl + \"/\" + id,\r\n\tdeleteAllUrl: () => Api.baseUrl + \"/\",\r\n\r\n\t// Create\r\n\tbuildApiPostRequest: (url, body) => {\r\n\t\treturn fetch(url, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: new Headers({\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t}),\r\n\t\t\tbody: JSON.stringify(body),\r\n\t\t});\r\n\t},\r\n\r\n\t// ReadAll\r\n\tbuildApiGetRequest: (url) => {\r\n\t\treturn fetch(url, {\r\n\t\t\tmethod: \"GET\",\r\n\t\t});\r\n\t},\r\n\r\n\t// UpdateById\r\n\tbuildApiPutRequest: (url, body) => {\r\n\t\treturn fetch(url, {\r\n\t\t\tmethod: \"PUT\",\r\n\t\t\theaders: new Headers({\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t}),\r\n\t\t\tbody: JSON.stringify(body),\r\n\t\t});\r\n\t},\r\n\r\n\t// DeleteAll\r\n\tbuildApiDeleteRequest: (url) => {\r\n\t\treturn fetch(url, {\r\n\t\t\tmethod: \"DELETE\",\r\n\t\t});\r\n\t},\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Api } from \"../../api/api\";\r\n\r\nimport \"./ReadById.css\";\r\n\r\nexport function ReadById(props) {\r\n    const id = props.match.params.id;\r\n\r\n    const [item, setItem] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (!item) {\r\n            getItemData();\r\n        }\r\n    });\r\n\r\n    const getItemData = async () => {\r\n        const resultado = await Api.buildApiGetRequest(Api.readSingleUrl(id));\r\n\r\n        const dados = await resultado.json();\r\n\r\n        setItem(dados);\r\n    };\r\n\r\n    return (\r\n        <div className=\"read-by-id\">\r\n            <a href={`/update/${id}`} className=\"button button--blue\">\r\n                Editar\r\n            </a>\r\n\r\n            <a href={`/delete/${id}`} className=\"button button--red\">\r\n                Remover\r\n            </a>\r\n\r\n            <br />\r\n            <div className=\"card\">\r\n                <h1 className=\"card__title\">{item.nome}</h1>\r\n                <img src={item.imagemUrl} alt={item.nome} width=\"200\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Api } from \"../../api/api\";\r\n\r\nimport \"./Create.css\";\r\n\r\nexport function Create(props) {\r\n    const [previewImage, setPreviewImage] = useState(\"\");\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const nome = event.target.nome.value;\r\n        const imagemUrl = event.target.imagemUrl.value;\r\n\r\n        const dados = {\r\n            nome,\r\n            imagemUrl,\r\n        };\r\n\r\n        const resultado = await Api.buildApiPostRequest(Api.createUrl(), dados);\r\n\r\n        const jsonResultado = await resultado.json();\r\n\r\n        props.history.push(`/view/${jsonResultado._id}`);\r\n    };\r\n\r\n    const updatePreview = event => {\r\n        setPreviewImage(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"create\">\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                <label htmlFor=\"nome\" className=\"form__label\">\r\n                    Nome:\r\n                </label>\r\n                <br />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"nome\"\r\n                    name=\"nome\"\r\n                    className=\"form__input\"\r\n                />\r\n                <br />\r\n\r\n                <label htmlFor=\"imagemUrl\" className=\"form__label\">\r\n                    URL da Imagem:\r\n                </label>\r\n                <br />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"imagemUrl\"\r\n                    name=\"imagemUrl\"\r\n                    className=\"form__input\"\r\n                    onChange={updatePreview}\r\n                />\r\n                <br />\r\n\r\n                {previewImage ? (\r\n                    <div>\r\n                        <span className=\"form__label\">Prévia da imagem:</span>\r\n                        <br />\r\n                        <img\r\n                            src={previewImage}\r\n                            className=\"preview-image\"\r\n                            alt=\"Prévia da Imagem\"\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n                <br />\r\n\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Adicionar\"\r\n                    className=\"button button--green button--full\"\r\n                />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import { Api } from \"../../api/api\";\r\n\r\nimport \"./Delete.css\";\r\n\r\nexport function Delete(props) {\r\n    const id = props.match.params.id;\r\n\r\n    const handleDelete = async event => {\r\n        event.preventDefault();\r\n\r\n        await Api.buildApiDeleteRequest(Api.deleteUrl(id));\r\n\r\n        props.history.push(\"/\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            Tem certeza que deseja remover este registro?\r\n            <br />\r\n            <br />\r\n            <button onClick={handleDelete} className=\"button button--red\">\r\n                Remover\r\n            </button>\r\n            <a href={`/view/${id}`} className=\"button button--grey\">\r\n                Cancelar\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n","import \"./ItemCard.css\";\r\n\r\nexport function ItemCard(props) {\r\n    const item = props.item;\r\n\r\n    return (\r\n        <a href={\"/view/\" + item._id}>\r\n            <div className=\"card\">\r\n                <h1 className=\"card__title\">{item.nome}</h1>\r\n                <img src={item.imagemUrl} alt={item.nome} width=\"200\" />\r\n            </div>\r\n        </a>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Api } from \"../../api/api\";\r\n\r\nimport { ItemCard } from \"../item-card/ItemCard\";\r\n\r\nimport \"./ReadAll.css\";\r\n\r\nexport function ReadAll() {\r\n    // useState\r\n    const [listaResultadoApi, atualizarListaResultadoApi] = useState(\"\");\r\n\r\n    // useEffect\r\n    useEffect(() => {\r\n        if (!listaResultadoApi) {\r\n            obterResultado();\r\n        }\r\n    });\r\n\r\n    const obterResultado = async () => {\r\n        const resultado = await Api.buildApiGetRequest(Api.readAllUrl());\r\n\r\n        const dados = await resultado.json();\r\n\r\n        atualizarListaResultadoApi(dados);\r\n    };\r\n\r\n    if (!listaResultadoApi) {\r\n        return <div>Carregando...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"read-all\">\r\n            {listaResultadoApi.map((item, index) => (\r\n                <ItemCard item={item} key={index} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Api } from \"../../api/api\";\r\n\r\nimport \"./Update.css\";\r\n\r\nexport function Update(props) {\r\n    const id = props.match.params.id;\r\n\r\n    const [item, setItem] = useState(\"\");\r\n\r\n    const [previewImage, setPreviewImage] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (!item) {\r\n            getItemData();\r\n        }\r\n    });\r\n\r\n    const getItemData = async () => {\r\n        const resultado = await Api.buildApiGetRequest(Api.readSingleUrl(id));\r\n\r\n        const dados = await resultado.json();\r\n\r\n        setItem(dados);\r\n\r\n        setPreviewImage(dados.imagemUrl);\r\n    };\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const nome = event.target.nome.value;\r\n        const imagemUrl = event.target.imagemUrl.value;\r\n\r\n        const dados = {\r\n            nome,\r\n            imagemUrl,\r\n        };\r\n\r\n        const resultado = await Api.buildApiPutRequest(\r\n            Api.updateUrl(id),\r\n            dados\r\n        );\r\n\r\n        const jsonResultado = await resultado.json();\r\n\r\n        props.history.push(`/view/${jsonResultado._id}`);\r\n    };\r\n\r\n    const updatePreview = event => {\r\n        setPreviewImage(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"update\">\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                <label htmlFor=\"nome\" className=\"form__label\">\r\n                    Nome:\r\n                </label>\r\n                <br />\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"nome\"\r\n                    name=\"nome\"\r\n                    className=\"form__input\"\r\n                    defaultValue={item.nome}\r\n                />\r\n                <br />\r\n                <label htmlFor=\"imagemUrl\" className=\"form__label\">\r\n                    URL da Imagem:\r\n                </label>\r\n                <br />\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"imagemUrl\"\r\n                    name=\"imagemUrl\"\r\n                    className=\"form__input\"\r\n                    defaultValue={item.imagemUrl}\r\n                    onChange={updatePreview}\r\n                />\r\n                <br />\r\n                <span className=\"form__label\">Prévia da imagem:</span>\r\n                <br />\r\n                <img\r\n                    src={previewImage}\r\n                    className=\"preview-image\"\r\n                    alt=\"Prévia da Imagem\"\r\n                />\r\n                <br />\r\n                <br />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Editar\"\r\n                    className=\"button button--blue button--full\"\r\n                />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import \"./Footer.css\";\r\n\r\nexport function Footer() {\r\n    return <footer className=\"footer\">Todos os direitos reservados.</footer>;\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./Header.css\";\r\n\r\nexport function Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <a href=\"/\">\r\n                <img src=\"/assets/logo-blue-croped.gif\" alt=\"Blue Edtech\" width = \"15%\" height = \"auto\"/>\r\n            </a>\r\n\r\n            <a href=\"/\">Listar</a>\r\n            <a href=\"/add\">Adicionar</a>\r\n        </header>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport { ReadById } from \"../../components/read-by-id/ReadById\";\r\nimport { Create } from \"../../components/create/Create\";\r\nimport { Delete } from \"../../components/delete/Delete\";\r\nimport { ReadAll } from \"../../components/read-all/ReadAll\";\r\nimport { Update } from \"../../components/update/Update\";\r\n\r\nimport { Footer } from \"../footer/Footer\";\r\nimport { Header } from \"../header/Header\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport function App() {\r\n    return (\r\n        <div className=\"app\">\r\n            <Header />\r\n            <div className=\"content\">\r\n                <Switch>\r\n                    <Route path=\"/\" exact={true} component={ReadAll} />\r\n\r\n                    <Route path=\"/view/:id\" component={ReadById} />\r\n\r\n                    <Route path=\"/add\" component={Create} />\r\n\r\n                    <Route path=\"/update/:id\" component={Update} />\r\n\r\n                    <Route path=\"/delete/:id\" component={Delete} />\r\n                </Switch>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { App } from \"./structure/app/App\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport \"./styles/button.css\";\r\nimport \"./styles/card.css\";\r\nimport \"./styles/form.css\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}